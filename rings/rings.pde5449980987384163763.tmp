// -----------------------------------------
final int OUTER_RADIUS           = 250;
final float INNER_RADIUS         = 50;
final float PERCENTAGE           = 1;
final float INITIAL_VALUE        = 0;
final float END_VALUE            = 2;
final float NUM_CIRCLES_ALLOWED  = 2;
// -----------------------------------------
float w =TAU/60;
HScrollbar ring_slider;
float ring_value;

void setup(){
  size(800,600);
  smooth(3);
  ring_slider = new HScrollbar(width*2/3,height/2, width/4, 8, 8);
}

void draw(){
  background(0);
  ring_slider.update();
  ring_slider.display(); 
  ring_value = TWO_PI * NUM_CIRCLES_ALLOWED * ring_slider.getPos();
  
  drawCircles(); 
  
    fill(255,0,0);
  textSize(26);
  text("RINGS", -width/2 + 300, -height/2 + 100);
}

private void drawCircles(){
    
    //Arc draw
    translate(width/3, height/2);
    
    //Shadow arc
    stroke(100,100,100, 100);
    strokeWeight(INNER_RADIUS);
    noFill();
    arc(0, 0, OUTER_RADIUS, OUTER_RADIUS, -HALF_PI, -HALF_PI + TWO_PI);
    
    //Main arc
    stroke(255,0,0);
    strokeWeight(INNER_RADIUS);
    noFill();
    arc(0, 0, OUTER_RADIUS, OUTER_RADIUS, -HALF_PI, -HALF_PI + ring_value);
        
    //Fake shadow draw
    stroke(0,0,0,100);
    arc(0, 0, OUTER_RADIUS, OUTER_RADIUS, -HALF_PI + ring_value, -HALF_PI + ring_value + 0.04);
        
    //Circle blocker draw
    stroke(255,0,0);
    arc(0, 0, OUTER_RADIUS, OUTER_RADIUS, -HALF_PI + ring_value - 0.05, -HALF_PI + ring_value);
    
    //Value indicator
    float val = -PI + ring_value;
    fill(0);
    float textSize = 14.0f;
    textSize(textSize);
    String r = nf(ring_value, 1, 1);
    float rw = textWidth(r);
    //print(ring_value, TAB, rw, "\n");
    text(r, ((OUTER_RADIUS/2) * sin(-val)) - rw/2, (OUTER_RADIUS/2) * cos(-val) + textSize/4 ); 

}
